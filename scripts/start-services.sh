#!/bin/bash

# Script para iniciar todos os servi√ßos do sistema de microservi√ßos
# Execute este script no terminal Linux/macOS

echo "üöÄ Iniciando Sistema de Microservi√ßos E-commerce"
echo "==============================================="

# Verificar se o .NET est√° instalado
echo "üìã Verificando pr√©-requisitos..."
if command -v dotnet &> /dev/null; then
    DOTNET_VERSION=$(dotnet --version)
    echo "‚úÖ .NET vers√£o: $DOTNET_VERSION"
else
    echo "‚ùå .NET n√£o encontrado. Instale o .NET 9.0 SDK"
    exit 1
fi

# Verificar se o RabbitMQ est√° rodando
echo "üìã Verificando RabbitMQ..."
if systemctl is-active --quiet rabbitmq-server 2>/dev/null; then
    echo "‚úÖ RabbitMQ est√° rodando"
elif brew services list | grep -q "rabbitmq.*started" 2>/dev/null; then
    echo "‚úÖ RabbitMQ est√° rodando (Homebrew)"
else
    echo "‚ö†Ô∏è  RabbitMQ n√£o est√° rodando. Tentando iniciar..."
    if command -v systemctl &> /dev/null; then
        sudo systemctl start rabbitmq-server
    elif command -v brew &> /dev/null; then
        brew services start rabbitmq
    else
        echo "‚ö†Ô∏è  RabbitMQ n√£o encontrado. Verifique se est√° instalado."
    fi
    sleep 5
fi

# Fun√ß√£o para iniciar servi√ßo em background
start_service() {
    local title="$1"
    local directory="$2"
    local port="$3"
    
    echo "üîß Iniciando $title (Porta $port)..."
    cd "$directory" && dotnet run &
    sleep 3
}

echo "üîß Iniciando servi√ßos..."

# Iniciar Gateway API
start_service "API Gateway" "src/Gateway.API" "5000"

# Iniciar Estoque API  
start_service "Estoque API" "src/Estoque.API" "5065"

# Iniciar Vendas API
start_service "Vendas API" "src/Vendas.API" "5066"

sleep 5

echo ""
echo "‚úÖ Todos os servi√ßos foram iniciados!"
echo ""
echo "üìã URLs dispon√≠veis:"
echo "  ‚Ä¢ API Gateway:     http://localhost:5000"
echo "  ‚Ä¢ Estoque API:     http://localhost:5065"
echo "  ‚Ä¢ Vendas API:      http://localhost:5066"
echo ""
echo "üìö Documenta√ß√£o:"
echo "  ‚Ä¢ Gateway Swagger: http://localhost:5000/swagger"
echo "  ‚Ä¢ Estoque Swagger: http://localhost:5065/swagger"
echo "  ‚Ä¢ Vendas Swagger:  http://localhost:5066/swagger"
echo ""
echo "üîç Health Checks:"
echo "  ‚Ä¢ Estoque Health:  http://localhost:5065/health"
echo "  ‚Ä¢ Vendas Health:   http://localhost:5066/health"
echo ""
echo "üîê Credenciais para teste:"
echo "  ‚Ä¢ Admin:  admin / admin123"
echo "  ‚Ä¢ Vendas: vendas / vendas123"
echo "  ‚Ä¢ Estoque: estoque / estoque123"
echo ""
echo "üí° Dica: Use o arquivo EXEMPLOS_USO.md para ver exemplos de requisi√ß√µes!"
echo ""
echo "Pressione Ctrl+C para parar todos os servi√ßos..."

# Aguardar interrup√ß√£o
trap 'echo ""; echo "üõë Parando todos os servi√ßos..."; pkill -f "dotnet run"; echo "‚úÖ Servi√ßos parados!"; exit 0' INT

# Manter script rodando
while true; do
    sleep 1
done


